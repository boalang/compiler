// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: diff.proto

package boa.types;

public final class Diff {
  private Diff() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ChangedFileOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .boa.types.ChangeKind change = 1;
    /**
     * <code>required .boa.types.ChangeKind change = 1;</code>
     *
     * <pre>
     ** The kind of change for this file 
     * </pre>
     */
    boolean hasChange();
    /**
     * <code>required .boa.types.ChangeKind change = 1;</code>
     *
     * <pre>
     ** The kind of change for this file 
     * </pre>
     */
    boa.types.Shared.ChangeKind getChange();

    // required .boa.types.ChangedFile.FileKind kind = 2;
    /**
     * <code>required .boa.types.ChangedFile.FileKind kind = 2;</code>
     *
     * <pre>
     ** The kind of file 
     * </pre>
     */
    boolean hasKind();
    /**
     * <code>required .boa.types.ChangedFile.FileKind kind = 2;</code>
     *
     * <pre>
     ** The kind of file 
     * </pre>
     */
    boa.types.Diff.ChangedFile.FileKind getKind();

    // required string name = 3;
    /**
     * <code>required string name = 3;</code>
     *
     * <pre>
     ** The full name and path of the file 
     * </pre>
     */
    boolean hasName();
    /**
     * <code>required string name = 3;</code>
     *
     * <pre>
     ** The full name and path of the file 
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 3;</code>
     *
     * <pre>
     ** The full name and path of the file 
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // required uint64 key = 4;
    /**
     * <code>required uint64 key = 4;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boolean hasKey();
    /**
     * <code>required uint64 key = 4;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    long getKey();

    // required bool ast = 5;
    /**
     * <code>required bool ast = 5;</code>
     *
     * <pre>
     ** @exclude Indicates if this file has a corresponding parsed AST or not 
     * </pre>
     */
    boolean hasAst();
    /**
     * <code>required bool ast = 5;</code>
     *
     * <pre>
     ** @exclude Indicates if this file has a corresponding parsed AST or not 
     * </pre>
     */
    boolean getAst();

    // optional .boa.types.CommentsRoot comments = 6;
    /**
     * <code>optional .boa.types.CommentsRoot comments = 6;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boolean hasComments();
    /**
     * <code>optional .boa.types.CommentsRoot comments = 6;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boa.types.Ast.CommentsRoot getComments();
    /**
     * <code>optional .boa.types.CommentsRoot comments = 6;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boa.types.Ast.CommentsRootOrBuilder getCommentsOrBuilder();

    // repeated .boa.types.ChangeKind changes = 7;
    /**
     * <code>repeated .boa.types.ChangeKind changes = 7;</code>
     *
     * <pre>
     ** The kinds of changes of this this compared to the corresponding parent commits 
     * </pre>
     */
    java.util.List<boa.types.Shared.ChangeKind> getChangesList();
    /**
     * <code>repeated .boa.types.ChangeKind changes = 7;</code>
     *
     * <pre>
     ** The kinds of changes of this this compared to the corresponding parent commits 
     * </pre>
     */
    int getChangesCount();
    /**
     * <code>repeated .boa.types.ChangeKind changes = 7;</code>
     *
     * <pre>
     ** The kinds of changes of this this compared to the corresponding parent commits 
     * </pre>
     */
    boa.types.Shared.ChangeKind getChanges(int index);

    // repeated string previous_names = 8;
    /**
     * <code>repeated string previous_names = 8;</code>
     *
     * <pre>
     ** The kinds of changes of this this compared to the corresponding parent commits 
     * </pre>
     */
    java.util.List<java.lang.String>
    getPreviousNamesList();
    /**
     * <code>repeated string previous_names = 8;</code>
     *
     * <pre>
     ** The kinds of changes of this this compared to the corresponding parent commits 
     * </pre>
     */
    int getPreviousNamesCount();
    /**
     * <code>repeated string previous_names = 8;</code>
     *
     * <pre>
     ** The kinds of changes of this this compared to the corresponding parent commits 
     * </pre>
     */
    java.lang.String getPreviousNames(int index);
    /**
     * <code>repeated string previous_names = 8;</code>
     *
     * <pre>
     ** The kinds of changes of this this compared to the corresponding parent commits 
     * </pre>
     */
    com.google.protobuf.ByteString
        getPreviousNamesBytes(int index);

    // repeated int32 previous_versions = 9;
    /**
     * <code>repeated int32 previous_versions = 9;</code>
     *
     * <pre>
     ** @exclude The indices of the corresponding parent commits in the list of all commits 
     * </pre>
     */
    java.util.List<java.lang.Integer> getPreviousVersionsList();
    /**
     * <code>repeated int32 previous_versions = 9;</code>
     *
     * <pre>
     ** @exclude The indices of the corresponding parent commits in the list of all commits 
     * </pre>
     */
    int getPreviousVersionsCount();
    /**
     * <code>repeated int32 previous_versions = 9;</code>
     *
     * <pre>
     ** @exclude The indices of the corresponding parent commits in the list of all commits 
     * </pre>
     */
    int getPreviousVersions(int index);

    // repeated int32 previous_indices = 10;
    /**
     * <code>repeated int32 previous_indices = 10;</code>
     *
     * <pre>
     ** @exclude The indices of the previous files in the list of changed files of the corresponding parent commits 
     * </pre>
     */
    java.util.List<java.lang.Integer> getPreviousIndicesList();
    /**
     * <code>repeated int32 previous_indices = 10;</code>
     *
     * <pre>
     ** @exclude The indices of the previous files in the list of changed files of the corresponding parent commits 
     * </pre>
     */
    int getPreviousIndicesCount();
    /**
     * <code>repeated int32 previous_indices = 10;</code>
     *
     * <pre>
     ** @exclude The indices of the previous files in the list of changed files of the corresponding parent commits 
     * </pre>
     */
    int getPreviousIndices(int index);
  }
  /**
   * Protobuf type {@code boa.types.ChangedFile}
   *
   * <pre>
   ** A file committed in a Revision 
   * </pre>
   */
  public static final class ChangedFile extends
      com.google.protobuf.GeneratedMessage
      implements ChangedFileOrBuilder {
    // Use ChangedFile.newBuilder() to construct.
    private ChangedFile(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ChangedFile(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ChangedFile defaultInstance;
    public static ChangedFile getDefaultInstance() {
      return defaultInstance;
    }

    public ChangedFile getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ChangedFile(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              boa.types.Shared.ChangeKind value = boa.types.Shared.ChangeKind.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                change_ = value;
              }
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              boa.types.Diff.ChangedFile.FileKind value = boa.types.Diff.ChangedFile.FileKind.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                kind_ = value;
              }
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              name_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              key_ = input.readUInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              ast_ = input.readBool();
              break;
            }
            case 50: {
              boa.types.Ast.CommentsRoot.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = comments_.toBuilder();
              }
              comments_ = input.readMessage(boa.types.Ast.CommentsRoot.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(comments_);
                comments_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 56: {
              int rawValue = input.readEnum();
              boa.types.Shared.ChangeKind value = boa.types.Shared.ChangeKind.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(7, rawValue);
              } else {
                if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                  changes_ = new java.util.ArrayList<boa.types.Shared.ChangeKind>();
                  mutable_bitField0_ |= 0x00000040;
                }
                changes_.add(value);
              }
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int rawValue = input.readEnum();
                boa.types.Shared.ChangeKind value = boa.types.Shared.ChangeKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(7, rawValue);
                } else {
                  if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                    changes_ = new java.util.ArrayList<boa.types.Shared.ChangeKind>();
                    mutable_bitField0_ |= 0x00000040;
                  }
                  changes_.add(value);
                }
              }
              input.popLimit(oldLimit);
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                previousNames_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000080;
              }
              previousNames_.add(input.readBytes());
              break;
            }
            case 72: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                previousVersions_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              previousVersions_.add(input.readInt32());
              break;
            }
            case 74: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
                previousVersions_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              while (input.getBytesUntilLimit() > 0) {
                previousVersions_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 80: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                previousIndices_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000200;
              }
              previousIndices_.add(input.readInt32());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200) && input.getBytesUntilLimit() > 0) {
                previousIndices_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000200;
              }
              while (input.getBytesUntilLimit() > 0) {
                previousIndices_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          changes_ = java.util.Collections.unmodifiableList(changes_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          previousNames_ = new com.google.protobuf.UnmodifiableLazyStringList(previousNames_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          previousVersions_ = java.util.Collections.unmodifiableList(previousVersions_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          previousIndices_ = java.util.Collections.unmodifiableList(previousIndices_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return boa.types.Diff.internal_static_boa_types_ChangedFile_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return boa.types.Diff.internal_static_boa_types_ChangedFile_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              boa.types.Diff.ChangedFile.class, boa.types.Diff.ChangedFile.Builder.class);
    }

    public static com.google.protobuf.Parser<ChangedFile> PARSER =
        new com.google.protobuf.AbstractParser<ChangedFile>() {
      public ChangedFile parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ChangedFile(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ChangedFile> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code boa.types.ChangedFile.FileKind}
     *
     * <pre>
     ** Describes the kind of the file 
     * </pre>
     */
    public enum FileKind
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>OTHER = 0;</code>
       *
       * <pre>
       ** The file's type was unknown 
       * </pre>
       */
      OTHER(0, 0),
      /**
       * <code>BINARY = 1;</code>
       *
       * <pre>
       ** The file represents a binary file 
       * </pre>
       */
      BINARY(1, 1),
      /**
       * <code>TEXT = 2;</code>
       *
       * <pre>
       ** The file represents a text file 
       * </pre>
       */
      TEXT(2, 2),
      /**
       * <code>XML = 3;</code>
       *
       * <pre>
       ** The file represents an XML file 
       * </pre>
       */
      XML(3, 3),
      /**
       * <code>SOURCE_JAVA_ERROR = 100;</code>
       *
       * <pre>
       ** The file represents a Java source file that had a parse error 
       * </pre>
       */
      SOURCE_JAVA_ERROR(4, 100),
      /**
       * <code>SOURCE_JAVA_JLS2 = 102;</code>
       *
       * <pre>
       ** The file represents a Java source file that parsed without error as JLS2 
       * </pre>
       */
      SOURCE_JAVA_JLS2(5, 102),
      /**
       * <code>SOURCE_JAVA_JLS3 = 103;</code>
       *
       * <pre>
       ** The file represents a Java source file that parsed without error as JLS3 
       * </pre>
       */
      SOURCE_JAVA_JLS3(6, 103),
      /**
       * <code>SOURCE_JAVA_JLS4 = 104;</code>
       *
       * <pre>
       ** The file represents a Java source file that parsed without error as JLS4 
       * </pre>
       */
      SOURCE_JAVA_JLS4(7, 104),
      /**
       * <code>SOURCE_JAVA_JLS8 = 108;</code>
       *
       * <pre>
       ** The file represents a Java source file that parsed without error as JLS8 
       * </pre>
       */
      SOURCE_JAVA_JLS8(8, 108),
      /**
       * <code>SOURCE_JS_ERROR = 300;</code>
       *
       * <pre>
       ** The file represents a JavaScript source file that had a parse error 
       * </pre>
       */
      SOURCE_JS_ERROR(14, 300),
      /**
       * <code>SOURCE_JS_ES1 = 301;</code>
       *
       * <pre>
       ** The file represents a JavaScript source file that parsed without error as ES1 
       * </pre>
       */
      SOURCE_JS_ES1(15, 301),
      /**
       * <code>SOURCE_JS_ES2 = 302;</code>
       *
       * <pre>
       ** The file represents a JavaScript source file that parsed without error as ES2 
       * </pre>
       */
      SOURCE_JS_ES2(16, 302),
      /**
       * <code>SOURCE_JS_ES3 = 303;</code>
       *
       * <pre>
       ** The file represents a JavaScript source file that parsed without error as ES3 
       * </pre>
       */
      SOURCE_JS_ES3(17, 303),
      /**
       * <code>SOURCE_JS_ES5 = 304;</code>
       *
       * <pre>
       ** The file represents a JavaScript source file that parsed without error as ES5 
       * </pre>
       */
      SOURCE_JS_ES5(18, 304),
      /**
       * <code>SOURCE_JS_ES6 = 305;</code>
       *
       * <pre>
       ** The file represents a JavaScript source file that parsed without error as ES6 
       * </pre>
       */
      SOURCE_JS_ES6(19, 305),
      /**
       * <code>SOURCE_JS_ES7 = 306;</code>
       *
       * <pre>
       ** The file represents a JavaScript source file that parsed without error as ES7 
       * </pre>
       */
      SOURCE_JS_ES7(20, 306),
      /**
       * <code>SOURCE_JS_ES8 = 307;</code>
       *
       * <pre>
       ** The file represents a JavaScript source file that parsed without error as ES8 
       * </pre>
       */
      SOURCE_JS_ES8(21, 307),
      /**
       * <code>SOURCE_PHP_ERROR = 400;</code>
       *
       * <pre>
       ** The file represents a PHP source file that had a parse error 
       * </pre>
       */
      SOURCE_PHP_ERROR(23, 400),
      /**
       * <code>SOURCE_PHP5 = 401;</code>
       *
       * <pre>
       ** The file represents a PHP source file that parsed without error as ES1 
       * </pre>
       */
      SOURCE_PHP5(24, 401),
      /**
       * <code>SOURCE_PHP5_3 = 402;</code>
       *
       * <pre>
       ** The file represents a PHP source file that parsed without error as ES2 
       * </pre>
       */
      SOURCE_PHP5_3(25, 402),
      /**
       * <code>SOURCE_PHP5_4 = 403;</code>
       *
       * <pre>
       ** The file represents a PHP source file that parsed without error as ES3 
       * </pre>
       */
      SOURCE_PHP5_4(26, 403),
      /**
       * <code>SOURCE_PHP5_5 = 404;</code>
       *
       * <pre>
       ** The file represents a PHP source file that parsed without error as ES5 
       * </pre>
       */
      SOURCE_PHP5_5(27, 404),
      /**
       * <code>SOURCE_PHP5_6 = 405;</code>
       *
       * <pre>
       ** The file represents a PHP source file that parsed without error as ES6 
       * </pre>
       */
      SOURCE_PHP5_6(28, 405),
      /**
       * <code>SOURCE_PHP7_0 = 406;</code>
       *
       * <pre>
       ** The file represents a PHP source file that parsed without error as ES7 
       * </pre>
       */
      SOURCE_PHP7_0(29, 406),
      /**
       * <code>SOURCE_PHP7_1 = 407;</code>
       *
       * <pre>
       ** The file represents a PHP source file that parsed without error as ES8 
       * </pre>
       */
      SOURCE_PHP7_1(30, 407),
      /**
       * <code>SOURCE_HTML_ERROR = 500;</code>
       *
       * <pre>
       ** The file represents an HTML source file that had a parse error 
       * </pre>
       */
      SOURCE_HTML_ERROR(32, 500),
      /**
       * <code>Source_HTML = 501;</code>
       *
       * <pre>
       ** The file represents an HTML source file that parsed without error 
       * </pre>
       */
      Source_HTML(33, 501),
      /**
       * <code>SOURCE_XML_ERROR = 600;</code>
       *
       * <pre>
       ** The file represents an XML source file that had a parse error 
       * </pre>
       */
      SOURCE_XML_ERROR(35, 600),
      /**
       * <code>Source_XML = 601;</code>
       *
       * <pre>
       ** The file represents an HTML source file that parsed without error 
       * </pre>
       */
      Source_XML(36, 601),
      /**
       * <code>SOURCE_CSS_ERROR = 700;</code>
       *
       * <pre>
       ** The file represents an CSS source file that had a parse error 
       * </pre>
       */
      SOURCE_CSS_ERROR(38, 700),
      /**
       * <code>Source_CSS = 701;</code>
       *
       * <pre>
       ** The file represents an CSS source file that parsed without error 
       * </pre>
       */
      Source_CSS(39, 701),
      ;

      /**
       * <code>JAVA_ERROR = 100;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public static final FileKind JAVA_ERROR = SOURCE_JAVA_ERROR;
      /**
       * <code>JLS2 = 102;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public static final FileKind JLS2 = SOURCE_JAVA_JLS2;
      /**
       * <code>JLS3 = 103;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public static final FileKind JLS3 = SOURCE_JAVA_JLS3;
      /**
       * <code>JLS4 = 104;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public static final FileKind JLS4 = SOURCE_JAVA_JLS4;
      /**
       * <code>JLS8 = 108;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public static final FileKind JLS8 = SOURCE_JAVA_JLS8;
      /**
       * <code>JS_ERROR = 300;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public static final FileKind JS_ERROR = SOURCE_JS_ERROR;
      /**
       * <code>PHP_ERROR = 400;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public static final FileKind PHP_ERROR = SOURCE_PHP_ERROR;
      /**
       * <code>HTML_ERROR = 500;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public static final FileKind HTML_ERROR = SOURCE_HTML_ERROR;
      /**
       * <code>XML_ERROR = 600;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public static final FileKind XML_ERROR = SOURCE_XML_ERROR;
      /**
       * <code>CSS_ERROR = 700;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public static final FileKind CSS_ERROR = SOURCE_CSS_ERROR;
      /**
       * <code>OTHER = 0;</code>
       *
       * <pre>
       ** The file's type was unknown 
       * </pre>
       */
      public static final int OTHER_VALUE = 0;
      /**
       * <code>BINARY = 1;</code>
       *
       * <pre>
       ** The file represents a binary file 
       * </pre>
       */
      public static final int BINARY_VALUE = 1;
      /**
       * <code>TEXT = 2;</code>
       *
       * <pre>
       ** The file represents a text file 
       * </pre>
       */
      public static final int TEXT_VALUE = 2;
      /**
       * <code>XML = 3;</code>
       *
       * <pre>
       ** The file represents an XML file 
       * </pre>
       */
      public static final int XML_VALUE = 3;
      /**
       * <code>SOURCE_JAVA_ERROR = 100;</code>
       *
       * <pre>
       ** The file represents a Java source file that had a parse error 
       * </pre>
       */
      public static final int SOURCE_JAVA_ERROR_VALUE = 100;
      /**
       * <code>SOURCE_JAVA_JLS2 = 102;</code>
       *
       * <pre>
       ** The file represents a Java source file that parsed without error as JLS2 
       * </pre>
       */
      public static final int SOURCE_JAVA_JLS2_VALUE = 102;
      /**
       * <code>SOURCE_JAVA_JLS3 = 103;</code>
       *
       * <pre>
       ** The file represents a Java source file that parsed without error as JLS3 
       * </pre>
       */
      public static final int SOURCE_JAVA_JLS3_VALUE = 103;
      /**
       * <code>SOURCE_JAVA_JLS4 = 104;</code>
       *
       * <pre>
       ** The file represents a Java source file that parsed without error as JLS4 
       * </pre>
       */
      public static final int SOURCE_JAVA_JLS4_VALUE = 104;
      /**
       * <code>SOURCE_JAVA_JLS8 = 108;</code>
       *
       * <pre>
       ** The file represents a Java source file that parsed without error as JLS8 
       * </pre>
       */
      public static final int SOURCE_JAVA_JLS8_VALUE = 108;
      /**
       * <code>JAVA_ERROR = 100;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public static final int JAVA_ERROR_VALUE = 100;
      /**
       * <code>JLS2 = 102;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public static final int JLS2_VALUE = 102;
      /**
       * <code>JLS3 = 103;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public static final int JLS3_VALUE = 103;
      /**
       * <code>JLS4 = 104;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public static final int JLS4_VALUE = 104;
      /**
       * <code>JLS8 = 108;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public static final int JLS8_VALUE = 108;
      /**
       * <code>SOURCE_JS_ERROR = 300;</code>
       *
       * <pre>
       ** The file represents a JavaScript source file that had a parse error 
       * </pre>
       */
      public static final int SOURCE_JS_ERROR_VALUE = 300;
      /**
       * <code>SOURCE_JS_ES1 = 301;</code>
       *
       * <pre>
       ** The file represents a JavaScript source file that parsed without error as ES1 
       * </pre>
       */
      public static final int SOURCE_JS_ES1_VALUE = 301;
      /**
       * <code>SOURCE_JS_ES2 = 302;</code>
       *
       * <pre>
       ** The file represents a JavaScript source file that parsed without error as ES2 
       * </pre>
       */
      public static final int SOURCE_JS_ES2_VALUE = 302;
      /**
       * <code>SOURCE_JS_ES3 = 303;</code>
       *
       * <pre>
       ** The file represents a JavaScript source file that parsed without error as ES3 
       * </pre>
       */
      public static final int SOURCE_JS_ES3_VALUE = 303;
      /**
       * <code>SOURCE_JS_ES5 = 304;</code>
       *
       * <pre>
       ** The file represents a JavaScript source file that parsed without error as ES5 
       * </pre>
       */
      public static final int SOURCE_JS_ES5_VALUE = 304;
      /**
       * <code>SOURCE_JS_ES6 = 305;</code>
       *
       * <pre>
       ** The file represents a JavaScript source file that parsed without error as ES6 
       * </pre>
       */
      public static final int SOURCE_JS_ES6_VALUE = 305;
      /**
       * <code>SOURCE_JS_ES7 = 306;</code>
       *
       * <pre>
       ** The file represents a JavaScript source file that parsed without error as ES7 
       * </pre>
       */
      public static final int SOURCE_JS_ES7_VALUE = 306;
      /**
       * <code>SOURCE_JS_ES8 = 307;</code>
       *
       * <pre>
       ** The file represents a JavaScript source file that parsed without error as ES8 
       * </pre>
       */
      public static final int SOURCE_JS_ES8_VALUE = 307;
      /**
       * <code>JS_ERROR = 300;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public static final int JS_ERROR_VALUE = 300;
      /**
       * <code>SOURCE_PHP_ERROR = 400;</code>
       *
       * <pre>
       ** The file represents a PHP source file that had a parse error 
       * </pre>
       */
      public static final int SOURCE_PHP_ERROR_VALUE = 400;
      /**
       * <code>SOURCE_PHP5 = 401;</code>
       *
       * <pre>
       ** The file represents a PHP source file that parsed without error as ES1 
       * </pre>
       */
      public static final int SOURCE_PHP5_VALUE = 401;
      /**
       * <code>SOURCE_PHP5_3 = 402;</code>
       *
       * <pre>
       ** The file represents a PHP source file that parsed without error as ES2 
       * </pre>
       */
      public static final int SOURCE_PHP5_3_VALUE = 402;
      /**
       * <code>SOURCE_PHP5_4 = 403;</code>
       *
       * <pre>
       ** The file represents a PHP source file that parsed without error as ES3 
       * </pre>
       */
      public static final int SOURCE_PHP5_4_VALUE = 403;
      /**
       * <code>SOURCE_PHP5_5 = 404;</code>
       *
       * <pre>
       ** The file represents a PHP source file that parsed without error as ES5 
       * </pre>
       */
      public static final int SOURCE_PHP5_5_VALUE = 404;
      /**
       * <code>SOURCE_PHP5_6 = 405;</code>
       *
       * <pre>
       ** The file represents a PHP source file that parsed without error as ES6 
       * </pre>
       */
      public static final int SOURCE_PHP5_6_VALUE = 405;
      /**
       * <code>SOURCE_PHP7_0 = 406;</code>
       *
       * <pre>
       ** The file represents a PHP source file that parsed without error as ES7 
       * </pre>
       */
      public static final int SOURCE_PHP7_0_VALUE = 406;
      /**
       * <code>SOURCE_PHP7_1 = 407;</code>
       *
       * <pre>
       ** The file represents a PHP source file that parsed without error as ES8 
       * </pre>
       */
      public static final int SOURCE_PHP7_1_VALUE = 407;
      /**
       * <code>PHP_ERROR = 400;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public static final int PHP_ERROR_VALUE = 400;
      /**
       * <code>SOURCE_HTML_ERROR = 500;</code>
       *
       * <pre>
       ** The file represents an HTML source file that had a parse error 
       * </pre>
       */
      public static final int SOURCE_HTML_ERROR_VALUE = 500;
      /**
       * <code>Source_HTML = 501;</code>
       *
       * <pre>
       ** The file represents an HTML source file that parsed without error 
       * </pre>
       */
      public static final int Source_HTML_VALUE = 501;
      /**
       * <code>HTML_ERROR = 500;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public static final int HTML_ERROR_VALUE = 500;
      /**
       * <code>SOURCE_XML_ERROR = 600;</code>
       *
       * <pre>
       ** The file represents an XML source file that had a parse error 
       * </pre>
       */
      public static final int SOURCE_XML_ERROR_VALUE = 600;
      /**
       * <code>Source_XML = 601;</code>
       *
       * <pre>
       ** The file represents an HTML source file that parsed without error 
       * </pre>
       */
      public static final int Source_XML_VALUE = 601;
      /**
       * <code>XML_ERROR = 600;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public static final int XML_ERROR_VALUE = 600;
      /**
       * <code>SOURCE_CSS_ERROR = 700;</code>
       *
       * <pre>
       ** The file represents an CSS source file that had a parse error 
       * </pre>
       */
      public static final int SOURCE_CSS_ERROR_VALUE = 700;
      /**
       * <code>Source_CSS = 701;</code>
       *
       * <pre>
       ** The file represents an CSS source file that parsed without error 
       * </pre>
       */
      public static final int Source_CSS_VALUE = 701;
      /**
       * <code>CSS_ERROR = 700;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public static final int CSS_ERROR_VALUE = 700;


      public final int getNumber() { return value; }

      public static FileKind valueOf(int value) {
        switch (value) {
          case 0: return OTHER;
          case 1: return BINARY;
          case 2: return TEXT;
          case 3: return XML;
          case 100: return SOURCE_JAVA_ERROR;
          case 102: return SOURCE_JAVA_JLS2;
          case 103: return SOURCE_JAVA_JLS3;
          case 104: return SOURCE_JAVA_JLS4;
          case 108: return SOURCE_JAVA_JLS8;
          case 300: return SOURCE_JS_ERROR;
          case 301: return SOURCE_JS_ES1;
          case 302: return SOURCE_JS_ES2;
          case 303: return SOURCE_JS_ES3;
          case 304: return SOURCE_JS_ES5;
          case 305: return SOURCE_JS_ES6;
          case 306: return SOURCE_JS_ES7;
          case 307: return SOURCE_JS_ES8;
          case 400: return SOURCE_PHP_ERROR;
          case 401: return SOURCE_PHP5;
          case 402: return SOURCE_PHP5_3;
          case 403: return SOURCE_PHP5_4;
          case 404: return SOURCE_PHP5_5;
          case 405: return SOURCE_PHP5_6;
          case 406: return SOURCE_PHP7_0;
          case 407: return SOURCE_PHP7_1;
          case 500: return SOURCE_HTML_ERROR;
          case 501: return Source_HTML;
          case 600: return SOURCE_XML_ERROR;
          case 601: return Source_XML;
          case 700: return SOURCE_CSS_ERROR;
          case 701: return Source_CSS;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<FileKind>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<FileKind>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<FileKind>() {
              public FileKind findValueByNumber(int number) {
                return FileKind.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return boa.types.Diff.ChangedFile.getDescriptor().getEnumTypes().get(0);
      }

      private static final FileKind[] VALUES = {
        OTHER, BINARY, TEXT, XML, SOURCE_JAVA_ERROR, SOURCE_JAVA_JLS2, SOURCE_JAVA_JLS3, SOURCE_JAVA_JLS4, SOURCE_JAVA_JLS8, JAVA_ERROR, JLS2, JLS3, JLS4, JLS8, SOURCE_JS_ERROR, SOURCE_JS_ES1, SOURCE_JS_ES2, SOURCE_JS_ES3, SOURCE_JS_ES5, SOURCE_JS_ES6, SOURCE_JS_ES7, SOURCE_JS_ES8, JS_ERROR, SOURCE_PHP_ERROR, SOURCE_PHP5, SOURCE_PHP5_3, SOURCE_PHP5_4, SOURCE_PHP5_5, SOURCE_PHP5_6, SOURCE_PHP7_0, SOURCE_PHP7_1, PHP_ERROR, SOURCE_HTML_ERROR, Source_HTML, HTML_ERROR, SOURCE_XML_ERROR, Source_XML, XML_ERROR, SOURCE_CSS_ERROR, Source_CSS, CSS_ERROR, 
      };

      public static FileKind valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private FileKind(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:boa.types.ChangedFile.FileKind)
    }

    private int bitField0_;
    // required .boa.types.ChangeKind change = 1;
    public static final int CHANGE_FIELD_NUMBER = 1;
    private boa.types.Shared.ChangeKind change_;
    /**
     * <code>required .boa.types.ChangeKind change = 1;</code>
     *
     * <pre>
     ** The kind of change for this file 
     * </pre>
     */
    public boolean hasChange() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .boa.types.ChangeKind change = 1;</code>
     *
     * <pre>
     ** The kind of change for this file 
     * </pre>
     */
    public boa.types.Shared.ChangeKind getChange() {
      return change_;
    }

    // required .boa.types.ChangedFile.FileKind kind = 2;
    public static final int KIND_FIELD_NUMBER = 2;
    private boa.types.Diff.ChangedFile.FileKind kind_;
    /**
     * <code>required .boa.types.ChangedFile.FileKind kind = 2;</code>
     *
     * <pre>
     ** The kind of file 
     * </pre>
     */
    public boolean hasKind() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .boa.types.ChangedFile.FileKind kind = 2;</code>
     *
     * <pre>
     ** The kind of file 
     * </pre>
     */
    public boa.types.Diff.ChangedFile.FileKind getKind() {
      return kind_;
    }

    // required string name = 3;
    public static final int NAME_FIELD_NUMBER = 3;
    private java.lang.Object name_;
    /**
     * <code>required string name = 3;</code>
     *
     * <pre>
     ** The full name and path of the file 
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string name = 3;</code>
     *
     * <pre>
     ** The full name and path of the file 
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 3;</code>
     *
     * <pre>
     ** The full name and path of the file 
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required uint64 key = 4;
    public static final int KEY_FIELD_NUMBER = 4;
    private long key_;
    /**
     * <code>required uint64 key = 4;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boolean hasKey() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required uint64 key = 4;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public long getKey() {
      return key_;
    }

    // required bool ast = 5;
    public static final int AST_FIELD_NUMBER = 5;
    private boolean ast_;
    /**
     * <code>required bool ast = 5;</code>
     *
     * <pre>
     ** @exclude Indicates if this file has a corresponding parsed AST or not 
     * </pre>
     */
    public boolean hasAst() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required bool ast = 5;</code>
     *
     * <pre>
     ** @exclude Indicates if this file has a corresponding parsed AST or not 
     * </pre>
     */
    public boolean getAst() {
      return ast_;
    }

    // optional .boa.types.CommentsRoot comments = 6;
    public static final int COMMENTS_FIELD_NUMBER = 6;
    private boa.types.Ast.CommentsRoot comments_;
    /**
     * <code>optional .boa.types.CommentsRoot comments = 6;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boolean hasComments() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .boa.types.CommentsRoot comments = 6;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boa.types.Ast.CommentsRoot getComments() {
      return comments_;
    }
    /**
     * <code>optional .boa.types.CommentsRoot comments = 6;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boa.types.Ast.CommentsRootOrBuilder getCommentsOrBuilder() {
      return comments_;
    }

    // repeated .boa.types.ChangeKind changes = 7;
    public static final int CHANGES_FIELD_NUMBER = 7;
    private java.util.List<boa.types.Shared.ChangeKind> changes_;
    /**
     * <code>repeated .boa.types.ChangeKind changes = 7;</code>
     *
     * <pre>
     ** The kinds of changes of this this compared to the corresponding parent commits 
     * </pre>
     */
    public java.util.List<boa.types.Shared.ChangeKind> getChangesList() {
      return changes_;
    }
    /**
     * <code>repeated .boa.types.ChangeKind changes = 7;</code>
     *
     * <pre>
     ** The kinds of changes of this this compared to the corresponding parent commits 
     * </pre>
     */
    public int getChangesCount() {
      return changes_.size();
    }
    /**
     * <code>repeated .boa.types.ChangeKind changes = 7;</code>
     *
     * <pre>
     ** The kinds of changes of this this compared to the corresponding parent commits 
     * </pre>
     */
    public boa.types.Shared.ChangeKind getChanges(int index) {
      return changes_.get(index);
    }

    // repeated string previous_names = 8;
    public static final int PREVIOUS_NAMES_FIELD_NUMBER = 8;
    private com.google.protobuf.LazyStringList previousNames_;
    /**
     * <code>repeated string previous_names = 8;</code>
     *
     * <pre>
     ** The kinds of changes of this this compared to the corresponding parent commits 
     * </pre>
     */
    public java.util.List<java.lang.String>
        getPreviousNamesList() {
      return previousNames_;
    }
    /**
     * <code>repeated string previous_names = 8;</code>
     *
     * <pre>
     ** The kinds of changes of this this compared to the corresponding parent commits 
     * </pre>
     */
    public int getPreviousNamesCount() {
      return previousNames_.size();
    }
    /**
     * <code>repeated string previous_names = 8;</code>
     *
     * <pre>
     ** The kinds of changes of this this compared to the corresponding parent commits 
     * </pre>
     */
    public java.lang.String getPreviousNames(int index) {
      return previousNames_.get(index);
    }
    /**
     * <code>repeated string previous_names = 8;</code>
     *
     * <pre>
     ** The kinds of changes of this this compared to the corresponding parent commits 
     * </pre>
     */
    public com.google.protobuf.ByteString
        getPreviousNamesBytes(int index) {
      return previousNames_.getByteString(index);
    }

    // repeated int32 previous_versions = 9;
    public static final int PREVIOUS_VERSIONS_FIELD_NUMBER = 9;
    private java.util.List<java.lang.Integer> previousVersions_;
    /**
     * <code>repeated int32 previous_versions = 9;</code>
     *
     * <pre>
     ** @exclude The indices of the corresponding parent commits in the list of all commits 
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getPreviousVersionsList() {
      return previousVersions_;
    }
    /**
     * <code>repeated int32 previous_versions = 9;</code>
     *
     * <pre>
     ** @exclude The indices of the corresponding parent commits in the list of all commits 
     * </pre>
     */
    public int getPreviousVersionsCount() {
      return previousVersions_.size();
    }
    /**
     * <code>repeated int32 previous_versions = 9;</code>
     *
     * <pre>
     ** @exclude The indices of the corresponding parent commits in the list of all commits 
     * </pre>
     */
    public int getPreviousVersions(int index) {
      return previousVersions_.get(index);
    }

    // repeated int32 previous_indices = 10;
    public static final int PREVIOUS_INDICES_FIELD_NUMBER = 10;
    private java.util.List<java.lang.Integer> previousIndices_;
    /**
     * <code>repeated int32 previous_indices = 10;</code>
     *
     * <pre>
     ** @exclude The indices of the previous files in the list of changed files of the corresponding parent commits 
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getPreviousIndicesList() {
      return previousIndices_;
    }
    /**
     * <code>repeated int32 previous_indices = 10;</code>
     *
     * <pre>
     ** @exclude The indices of the previous files in the list of changed files of the corresponding parent commits 
     * </pre>
     */
    public int getPreviousIndicesCount() {
      return previousIndices_.size();
    }
    /**
     * <code>repeated int32 previous_indices = 10;</code>
     *
     * <pre>
     ** @exclude The indices of the previous files in the list of changed files of the corresponding parent commits 
     * </pre>
     */
    public int getPreviousIndices(int index) {
      return previousIndices_.get(index);
    }

    private void initFields() {
      change_ = boa.types.Shared.ChangeKind.UNKNOWN;
      kind_ = boa.types.Diff.ChangedFile.FileKind.OTHER;
      name_ = "";
      key_ = 0L;
      ast_ = false;
      comments_ = boa.types.Ast.CommentsRoot.getDefaultInstance();
      changes_ = java.util.Collections.emptyList();
      previousNames_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      previousVersions_ = java.util.Collections.emptyList();
      previousIndices_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasChange()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasKind()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasKey()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAst()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasComments()) {
        if (!getComments().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, change_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, kind_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt64(4, key_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(5, ast_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(6, comments_);
      }
      for (int i = 0; i < changes_.size(); i++) {
        output.writeEnum(7, changes_.get(i).getNumber());
      }
      for (int i = 0; i < previousNames_.size(); i++) {
        output.writeBytes(8, previousNames_.getByteString(i));
      }
      for (int i = 0; i < previousVersions_.size(); i++) {
        output.writeInt32(9, previousVersions_.get(i));
      }
      for (int i = 0; i < previousIndices_.size(); i++) {
        output.writeInt32(10, previousIndices_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, change_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, kind_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, key_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, ast_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, comments_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < changes_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(changes_.get(i).getNumber());
        }
        size += dataSize;
        size += 1 * changes_.size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < previousNames_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(previousNames_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getPreviousNamesList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < previousVersions_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(previousVersions_.get(i));
        }
        size += dataSize;
        size += 1 * getPreviousVersionsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < previousIndices_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(previousIndices_.get(i));
        }
        size += dataSize;
        size += 1 * getPreviousIndicesList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static boa.types.Diff.ChangedFile parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static boa.types.Diff.ChangedFile parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static boa.types.Diff.ChangedFile parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static boa.types.Diff.ChangedFile parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static boa.types.Diff.ChangedFile parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static boa.types.Diff.ChangedFile parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static boa.types.Diff.ChangedFile parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static boa.types.Diff.ChangedFile parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static boa.types.Diff.ChangedFile parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static boa.types.Diff.ChangedFile parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(boa.types.Diff.ChangedFile prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code boa.types.ChangedFile}
     *
     * <pre>
     ** A file committed in a Revision 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements boa.types.Diff.ChangedFileOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Diff.internal_static_boa_types_ChangedFile_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Diff.internal_static_boa_types_ChangedFile_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Diff.ChangedFile.class, boa.types.Diff.ChangedFile.Builder.class);
      }

      // Construct using boa.types.Diff.ChangedFile.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCommentsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        change_ = boa.types.Shared.ChangeKind.UNKNOWN;
        bitField0_ = (bitField0_ & ~0x00000001);
        kind_ = boa.types.Diff.ChangedFile.FileKind.OTHER;
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        key_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        ast_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        if (commentsBuilder_ == null) {
          comments_ = boa.types.Ast.CommentsRoot.getDefaultInstance();
        } else {
          commentsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        changes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        previousNames_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000080);
        previousVersions_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        previousIndices_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return boa.types.Diff.internal_static_boa_types_ChangedFile_descriptor;
      }

      public boa.types.Diff.ChangedFile getDefaultInstanceForType() {
        return boa.types.Diff.ChangedFile.getDefaultInstance();
      }

      public boa.types.Diff.ChangedFile build() {
        boa.types.Diff.ChangedFile result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public boa.types.Diff.ChangedFile buildPartial() {
        boa.types.Diff.ChangedFile result = new boa.types.Diff.ChangedFile(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.change_ = change_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.kind_ = kind_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.key_ = key_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.ast_ = ast_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (commentsBuilder_ == null) {
          result.comments_ = comments_;
        } else {
          result.comments_ = commentsBuilder_.build();
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          changes_ = java.util.Collections.unmodifiableList(changes_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.changes_ = changes_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          previousNames_ = new com.google.protobuf.UnmodifiableLazyStringList(
              previousNames_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.previousNames_ = previousNames_;
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          previousVersions_ = java.util.Collections.unmodifiableList(previousVersions_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.previousVersions_ = previousVersions_;
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          previousIndices_ = java.util.Collections.unmodifiableList(previousIndices_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.previousIndices_ = previousIndices_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof boa.types.Diff.ChangedFile) {
          return mergeFrom((boa.types.Diff.ChangedFile)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(boa.types.Diff.ChangedFile other) {
        if (other == boa.types.Diff.ChangedFile.getDefaultInstance()) return this;
        if (other.hasChange()) {
          setChange(other.getChange());
        }
        if (other.hasKind()) {
          setKind(other.getKind());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000004;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasKey()) {
          setKey(other.getKey());
        }
        if (other.hasAst()) {
          setAst(other.getAst());
        }
        if (other.hasComments()) {
          mergeComments(other.getComments());
        }
        if (!other.changes_.isEmpty()) {
          if (changes_.isEmpty()) {
            changes_ = other.changes_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureChangesIsMutable();
            changes_.addAll(other.changes_);
          }
          onChanged();
        }
        if (!other.previousNames_.isEmpty()) {
          if (previousNames_.isEmpty()) {
            previousNames_ = other.previousNames_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensurePreviousNamesIsMutable();
            previousNames_.addAll(other.previousNames_);
          }
          onChanged();
        }
        if (!other.previousVersions_.isEmpty()) {
          if (previousVersions_.isEmpty()) {
            previousVersions_ = other.previousVersions_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensurePreviousVersionsIsMutable();
            previousVersions_.addAll(other.previousVersions_);
          }
          onChanged();
        }
        if (!other.previousIndices_.isEmpty()) {
          if (previousIndices_.isEmpty()) {
            previousIndices_ = other.previousIndices_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensurePreviousIndicesIsMutable();
            previousIndices_.addAll(other.previousIndices_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasChange()) {
          
          return false;
        }
        if (!hasKind()) {
          
          return false;
        }
        if (!hasName()) {
          
          return false;
        }
        if (!hasKey()) {
          
          return false;
        }
        if (!hasAst()) {
          
          return false;
        }
        if (hasComments()) {
          if (!getComments().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        boa.types.Diff.ChangedFile parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (boa.types.Diff.ChangedFile) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .boa.types.ChangeKind change = 1;
      private boa.types.Shared.ChangeKind change_ = boa.types.Shared.ChangeKind.UNKNOWN;
      /**
       * <code>required .boa.types.ChangeKind change = 1;</code>
       *
       * <pre>
       ** The kind of change for this file 
       * </pre>
       */
      public boolean hasChange() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .boa.types.ChangeKind change = 1;</code>
       *
       * <pre>
       ** The kind of change for this file 
       * </pre>
       */
      public boa.types.Shared.ChangeKind getChange() {
        return change_;
      }
      /**
       * <code>required .boa.types.ChangeKind change = 1;</code>
       *
       * <pre>
       ** The kind of change for this file 
       * </pre>
       */
      public Builder setChange(boa.types.Shared.ChangeKind value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        change_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .boa.types.ChangeKind change = 1;</code>
       *
       * <pre>
       ** The kind of change for this file 
       * </pre>
       */
      public Builder clearChange() {
        bitField0_ = (bitField0_ & ~0x00000001);
        change_ = boa.types.Shared.ChangeKind.UNKNOWN;
        onChanged();
        return this;
      }

      // required .boa.types.ChangedFile.FileKind kind = 2;
      private boa.types.Diff.ChangedFile.FileKind kind_ = boa.types.Diff.ChangedFile.FileKind.OTHER;
      /**
       * <code>required .boa.types.ChangedFile.FileKind kind = 2;</code>
       *
       * <pre>
       ** The kind of file 
       * </pre>
       */
      public boolean hasKind() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .boa.types.ChangedFile.FileKind kind = 2;</code>
       *
       * <pre>
       ** The kind of file 
       * </pre>
       */
      public boa.types.Diff.ChangedFile.FileKind getKind() {
        return kind_;
      }
      /**
       * <code>required .boa.types.ChangedFile.FileKind kind = 2;</code>
       *
       * <pre>
       ** The kind of file 
       * </pre>
       */
      public Builder setKind(boa.types.Diff.ChangedFile.FileKind value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        kind_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .boa.types.ChangedFile.FileKind kind = 2;</code>
       *
       * <pre>
       ** The kind of file 
       * </pre>
       */
      public Builder clearKind() {
        bitField0_ = (bitField0_ & ~0x00000002);
        kind_ = boa.types.Diff.ChangedFile.FileKind.OTHER;
        onChanged();
        return this;
      }

      // required string name = 3;
      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 3;</code>
       *
       * <pre>
       ** The full name and path of the file 
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string name = 3;</code>
       *
       * <pre>
       ** The full name and path of the file 
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 3;</code>
       *
       * <pre>
       ** The full name and path of the file 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 3;</code>
       *
       * <pre>
       ** The full name and path of the file 
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 3;</code>
       *
       * <pre>
       ** The full name and path of the file 
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 3;</code>
       *
       * <pre>
       ** The full name and path of the file 
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        name_ = value;
        onChanged();
        return this;
      }

      // required uint64 key = 4;
      private long key_ ;
      /**
       * <code>required uint64 key = 4;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasKey() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required uint64 key = 4;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public long getKey() {
        return key_;
      }
      /**
       * <code>required uint64 key = 4;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setKey(long value) {
        bitField0_ |= 0x00000008;
        key_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 key = 4;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder clearKey() {
        bitField0_ = (bitField0_ & ~0x00000008);
        key_ = 0L;
        onChanged();
        return this;
      }

      // required bool ast = 5;
      private boolean ast_ ;
      /**
       * <code>required bool ast = 5;</code>
       *
       * <pre>
       ** @exclude Indicates if this file has a corresponding parsed AST or not 
       * </pre>
       */
      public boolean hasAst() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required bool ast = 5;</code>
       *
       * <pre>
       ** @exclude Indicates if this file has a corresponding parsed AST or not 
       * </pre>
       */
      public boolean getAst() {
        return ast_;
      }
      /**
       * <code>required bool ast = 5;</code>
       *
       * <pre>
       ** @exclude Indicates if this file has a corresponding parsed AST or not 
       * </pre>
       */
      public Builder setAst(boolean value) {
        bitField0_ |= 0x00000010;
        ast_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool ast = 5;</code>
       *
       * <pre>
       ** @exclude Indicates if this file has a corresponding parsed AST or not 
       * </pre>
       */
      public Builder clearAst() {
        bitField0_ = (bitField0_ & ~0x00000010);
        ast_ = false;
        onChanged();
        return this;
      }

      // optional .boa.types.CommentsRoot comments = 6;
      private boa.types.Ast.CommentsRoot comments_ = boa.types.Ast.CommentsRoot.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          boa.types.Ast.CommentsRoot, boa.types.Ast.CommentsRoot.Builder, boa.types.Ast.CommentsRootOrBuilder> commentsBuilder_;
      /**
       * <code>optional .boa.types.CommentsRoot comments = 6;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasComments() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .boa.types.CommentsRoot comments = 6;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.CommentsRoot getComments() {
        if (commentsBuilder_ == null) {
          return comments_;
        } else {
          return commentsBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .boa.types.CommentsRoot comments = 6;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setComments(boa.types.Ast.CommentsRoot value) {
        if (commentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          comments_ = value;
          onChanged();
        } else {
          commentsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .boa.types.CommentsRoot comments = 6;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setComments(
          boa.types.Ast.CommentsRoot.Builder builderForValue) {
        if (commentsBuilder_ == null) {
          comments_ = builderForValue.build();
          onChanged();
        } else {
          commentsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .boa.types.CommentsRoot comments = 6;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder mergeComments(boa.types.Ast.CommentsRoot value) {
        if (commentsBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              comments_ != boa.types.Ast.CommentsRoot.getDefaultInstance()) {
            comments_ =
              boa.types.Ast.CommentsRoot.newBuilder(comments_).mergeFrom(value).buildPartial();
          } else {
            comments_ = value;
          }
          onChanged();
        } else {
          commentsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .boa.types.CommentsRoot comments = 6;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder clearComments() {
        if (commentsBuilder_ == null) {
          comments_ = boa.types.Ast.CommentsRoot.getDefaultInstance();
          onChanged();
        } else {
          commentsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .boa.types.CommentsRoot comments = 6;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.CommentsRoot.Builder getCommentsBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getCommentsFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .boa.types.CommentsRoot comments = 6;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.CommentsRootOrBuilder getCommentsOrBuilder() {
        if (commentsBuilder_ != null) {
          return commentsBuilder_.getMessageOrBuilder();
        } else {
          return comments_;
        }
      }
      /**
       * <code>optional .boa.types.CommentsRoot comments = 6;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          boa.types.Ast.CommentsRoot, boa.types.Ast.CommentsRoot.Builder, boa.types.Ast.CommentsRootOrBuilder> 
          getCommentsFieldBuilder() {
        if (commentsBuilder_ == null) {
          commentsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              boa.types.Ast.CommentsRoot, boa.types.Ast.CommentsRoot.Builder, boa.types.Ast.CommentsRootOrBuilder>(
                  comments_,
                  getParentForChildren(),
                  isClean());
          comments_ = null;
        }
        return commentsBuilder_;
      }

      // repeated .boa.types.ChangeKind changes = 7;
      private java.util.List<boa.types.Shared.ChangeKind> changes_ =
        java.util.Collections.emptyList();
      private void ensureChangesIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          changes_ = new java.util.ArrayList<boa.types.Shared.ChangeKind>(changes_);
          bitField0_ |= 0x00000040;
        }
      }
      /**
       * <code>repeated .boa.types.ChangeKind changes = 7;</code>
       *
       * <pre>
       ** The kinds of changes of this this compared to the corresponding parent commits 
       * </pre>
       */
      public java.util.List<boa.types.Shared.ChangeKind> getChangesList() {
        return java.util.Collections.unmodifiableList(changes_);
      }
      /**
       * <code>repeated .boa.types.ChangeKind changes = 7;</code>
       *
       * <pre>
       ** The kinds of changes of this this compared to the corresponding parent commits 
       * </pre>
       */
      public int getChangesCount() {
        return changes_.size();
      }
      /**
       * <code>repeated .boa.types.ChangeKind changes = 7;</code>
       *
       * <pre>
       ** The kinds of changes of this this compared to the corresponding parent commits 
       * </pre>
       */
      public boa.types.Shared.ChangeKind getChanges(int index) {
        return changes_.get(index);
      }
      /**
       * <code>repeated .boa.types.ChangeKind changes = 7;</code>
       *
       * <pre>
       ** The kinds of changes of this this compared to the corresponding parent commits 
       * </pre>
       */
      public Builder setChanges(
          int index, boa.types.Shared.ChangeKind value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureChangesIsMutable();
        changes_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .boa.types.ChangeKind changes = 7;</code>
       *
       * <pre>
       ** The kinds of changes of this this compared to the corresponding parent commits 
       * </pre>
       */
      public Builder addChanges(boa.types.Shared.ChangeKind value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureChangesIsMutable();
        changes_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .boa.types.ChangeKind changes = 7;</code>
       *
       * <pre>
       ** The kinds of changes of this this compared to the corresponding parent commits 
       * </pre>
       */
      public Builder addAllChanges(
          java.lang.Iterable<? extends boa.types.Shared.ChangeKind> values) {
        ensureChangesIsMutable();
        super.addAll(values, changes_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .boa.types.ChangeKind changes = 7;</code>
       *
       * <pre>
       ** The kinds of changes of this this compared to the corresponding parent commits 
       * </pre>
       */
      public Builder clearChanges() {
        changes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // repeated string previous_names = 8;
      private com.google.protobuf.LazyStringList previousNames_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensurePreviousNamesIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          previousNames_ = new com.google.protobuf.LazyStringArrayList(previousNames_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated string previous_names = 8;</code>
       *
       * <pre>
       ** The kinds of changes of this this compared to the corresponding parent commits 
       * </pre>
       */
      public java.util.List<java.lang.String>
          getPreviousNamesList() {
        return java.util.Collections.unmodifiableList(previousNames_);
      }
      /**
       * <code>repeated string previous_names = 8;</code>
       *
       * <pre>
       ** The kinds of changes of this this compared to the corresponding parent commits 
       * </pre>
       */
      public int getPreviousNamesCount() {
        return previousNames_.size();
      }
      /**
       * <code>repeated string previous_names = 8;</code>
       *
       * <pre>
       ** The kinds of changes of this this compared to the corresponding parent commits 
       * </pre>
       */
      public java.lang.String getPreviousNames(int index) {
        return previousNames_.get(index);
      }
      /**
       * <code>repeated string previous_names = 8;</code>
       *
       * <pre>
       ** The kinds of changes of this this compared to the corresponding parent commits 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPreviousNamesBytes(int index) {
        return previousNames_.getByteString(index);
      }
      /**
       * <code>repeated string previous_names = 8;</code>
       *
       * <pre>
       ** The kinds of changes of this this compared to the corresponding parent commits 
       * </pre>
       */
      public Builder setPreviousNames(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensurePreviousNamesIsMutable();
        previousNames_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string previous_names = 8;</code>
       *
       * <pre>
       ** The kinds of changes of this this compared to the corresponding parent commits 
       * </pre>
       */
      public Builder addPreviousNames(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensurePreviousNamesIsMutable();
        previousNames_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string previous_names = 8;</code>
       *
       * <pre>
       ** The kinds of changes of this this compared to the corresponding parent commits 
       * </pre>
       */
      public Builder addAllPreviousNames(
          java.lang.Iterable<java.lang.String> values) {
        ensurePreviousNamesIsMutable();
        super.addAll(values, previousNames_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string previous_names = 8;</code>
       *
       * <pre>
       ** The kinds of changes of this this compared to the corresponding parent commits 
       * </pre>
       */
      public Builder clearPreviousNames() {
        previousNames_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string previous_names = 8;</code>
       *
       * <pre>
       ** The kinds of changes of this this compared to the corresponding parent commits 
       * </pre>
       */
      public Builder addPreviousNamesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensurePreviousNamesIsMutable();
        previousNames_.add(value);
        onChanged();
        return this;
      }

      // repeated int32 previous_versions = 9;
      private java.util.List<java.lang.Integer> previousVersions_ = java.util.Collections.emptyList();
      private void ensurePreviousVersionsIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          previousVersions_ = new java.util.ArrayList<java.lang.Integer>(previousVersions_);
          bitField0_ |= 0x00000100;
         }
      }
      /**
       * <code>repeated int32 previous_versions = 9;</code>
       *
       * <pre>
       ** @exclude The indices of the corresponding parent commits in the list of all commits 
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getPreviousVersionsList() {
        return java.util.Collections.unmodifiableList(previousVersions_);
      }
      /**
       * <code>repeated int32 previous_versions = 9;</code>
       *
       * <pre>
       ** @exclude The indices of the corresponding parent commits in the list of all commits 
       * </pre>
       */
      public int getPreviousVersionsCount() {
        return previousVersions_.size();
      }
      /**
       * <code>repeated int32 previous_versions = 9;</code>
       *
       * <pre>
       ** @exclude The indices of the corresponding parent commits in the list of all commits 
       * </pre>
       */
      public int getPreviousVersions(int index) {
        return previousVersions_.get(index);
      }
      /**
       * <code>repeated int32 previous_versions = 9;</code>
       *
       * <pre>
       ** @exclude The indices of the corresponding parent commits in the list of all commits 
       * </pre>
       */
      public Builder setPreviousVersions(
          int index, int value) {
        ensurePreviousVersionsIsMutable();
        previousVersions_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 previous_versions = 9;</code>
       *
       * <pre>
       ** @exclude The indices of the corresponding parent commits in the list of all commits 
       * </pre>
       */
      public Builder addPreviousVersions(int value) {
        ensurePreviousVersionsIsMutable();
        previousVersions_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 previous_versions = 9;</code>
       *
       * <pre>
       ** @exclude The indices of the corresponding parent commits in the list of all commits 
       * </pre>
       */
      public Builder addAllPreviousVersions(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePreviousVersionsIsMutable();
        super.addAll(values, previousVersions_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 previous_versions = 9;</code>
       *
       * <pre>
       ** @exclude The indices of the corresponding parent commits in the list of all commits 
       * </pre>
       */
      public Builder clearPreviousVersions() {
        previousVersions_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }

      // repeated int32 previous_indices = 10;
      private java.util.List<java.lang.Integer> previousIndices_ = java.util.Collections.emptyList();
      private void ensurePreviousIndicesIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          previousIndices_ = new java.util.ArrayList<java.lang.Integer>(previousIndices_);
          bitField0_ |= 0x00000200;
         }
      }
      /**
       * <code>repeated int32 previous_indices = 10;</code>
       *
       * <pre>
       ** @exclude The indices of the previous files in the list of changed files of the corresponding parent commits 
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getPreviousIndicesList() {
        return java.util.Collections.unmodifiableList(previousIndices_);
      }
      /**
       * <code>repeated int32 previous_indices = 10;</code>
       *
       * <pre>
       ** @exclude The indices of the previous files in the list of changed files of the corresponding parent commits 
       * </pre>
       */
      public int getPreviousIndicesCount() {
        return previousIndices_.size();
      }
      /**
       * <code>repeated int32 previous_indices = 10;</code>
       *
       * <pre>
       ** @exclude The indices of the previous files in the list of changed files of the corresponding parent commits 
       * </pre>
       */
      public int getPreviousIndices(int index) {
        return previousIndices_.get(index);
      }
      /**
       * <code>repeated int32 previous_indices = 10;</code>
       *
       * <pre>
       ** @exclude The indices of the previous files in the list of changed files of the corresponding parent commits 
       * </pre>
       */
      public Builder setPreviousIndices(
          int index, int value) {
        ensurePreviousIndicesIsMutable();
        previousIndices_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 previous_indices = 10;</code>
       *
       * <pre>
       ** @exclude The indices of the previous files in the list of changed files of the corresponding parent commits 
       * </pre>
       */
      public Builder addPreviousIndices(int value) {
        ensurePreviousIndicesIsMutable();
        previousIndices_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 previous_indices = 10;</code>
       *
       * <pre>
       ** @exclude The indices of the previous files in the list of changed files of the corresponding parent commits 
       * </pre>
       */
      public Builder addAllPreviousIndices(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePreviousIndicesIsMutable();
        super.addAll(values, previousIndices_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 previous_indices = 10;</code>
       *
       * <pre>
       ** @exclude The indices of the previous files in the list of changed files of the corresponding parent commits 
       * </pre>
       */
      public Builder clearPreviousIndices() {
        previousIndices_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:boa.types.ChangedFile)
    }

    static {
      defaultInstance = new ChangedFile(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:boa.types.ChangedFile)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_ChangedFile_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_ChangedFile_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\ndiff.proto\022\tboa.types\032\014shared.proto\032\ta" +
      "st.proto\"\232\010\n\013ChangedFile\022%\n\006change\030\001 \002(\016" +
      "2\025.boa.types.ChangeKind\022-\n\004kind\030\002 \002(\0162\037." +
      "boa.types.ChangedFile.FileKind\022\014\n\004name\030\003" +
      " \002(\t\022\013\n\003key\030\004 \002(\004\022\013\n\003ast\030\005 \002(\010\022)\n\010commen" +
      "ts\030\006 \001(\0132\027.boa.types.CommentsRoot\022&\n\007cha" +
      "nges\030\007 \003(\0162\025.boa.types.ChangeKind\022\026\n\016pre" +
      "vious_names\030\010 \003(\t\022\031\n\021previous_versions\030\t" +
      " \003(\005\022\030\n\020previous_indices\030\n \003(\005\"\354\005\n\010FileK" +
      "ind\022\t\n\005OTHER\020\000\022\n\n\006BINARY\020\001\022\010\n\004TEXT\020\002\022\007\n\003",
      "XML\020\003\022\025\n\021SOURCE_JAVA_ERROR\020d\022\024\n\020SOURCE_J" +
      "AVA_JLS2\020f\022\024\n\020SOURCE_JAVA_JLS3\020g\022\024\n\020SOUR" +
      "CE_JAVA_JLS4\020h\022\024\n\020SOURCE_JAVA_JLS8\020l\022\016\n\n" +
      "JAVA_ERROR\020d\022\010\n\004JLS2\020f\022\010\n\004JLS3\020g\022\010\n\004JLS4" +
      "\020h\022\010\n\004JLS8\020l\022\024\n\017SOURCE_JS_ERROR\020\254\002\022\022\n\rSO" +
      "URCE_JS_ES1\020\255\002\022\022\n\rSOURCE_JS_ES2\020\256\002\022\022\n\rSO" +
      "URCE_JS_ES3\020\257\002\022\022\n\rSOURCE_JS_ES5\020\260\002\022\022\n\rSO" +
      "URCE_JS_ES6\020\261\002\022\022\n\rSOURCE_JS_ES7\020\262\002\022\022\n\rSO" +
      "URCE_JS_ES8\020\263\002\022\r\n\010JS_ERROR\020\254\002\022\025\n\020SOURCE_" +
      "PHP_ERROR\020\220\003\022\020\n\013SOURCE_PHP5\020\221\003\022\022\n\rSOURCE",
      "_PHP5_3\020\222\003\022\022\n\rSOURCE_PHP5_4\020\223\003\022\022\n\rSOURCE" +
      "_PHP5_5\020\224\003\022\022\n\rSOURCE_PHP5_6\020\225\003\022\022\n\rSOURCE" +
      "_PHP7_0\020\226\003\022\022\n\rSOURCE_PHP7_1\020\227\003\022\016\n\tPHP_ER" +
      "ROR\020\220\003\022\026\n\021SOURCE_HTML_ERROR\020\364\003\022\020\n\013Source" +
      "_HTML\020\365\003\022\017\n\nHTML_ERROR\020\364\003\022\025\n\020SOURCE_XML_" +
      "ERROR\020\330\004\022\017\n\nSource_XML\020\331\004\022\016\n\tXML_ERROR\020\330" +
      "\004\022\025\n\020SOURCE_CSS_ERROR\020\274\005\022\017\n\nSource_CSS\020\275" +
      "\005\022\016\n\tCSS_ERROR\020\274\005\032\002\020\001B\002H\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_boa_types_ChangedFile_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_boa_types_ChangedFile_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_ChangedFile_descriptor,
              new java.lang.String[] { "Change", "Kind", "Name", "Key", "Ast", "Comments", "Changes", "PreviousNames", "PreviousVersions", "PreviousIndices", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          boa.types.Shared.getDescriptor(),
          boa.types.Ast.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
